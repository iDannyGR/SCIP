// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Roles  {
  Admin
  Creator
} 

model Organization {
  id        Int @id @default(autoincrement())
  name      String @unique
  website   String?
  phone     String
  createAt  DateTime  @default(now())
  updateAt  DateTime  @updatedAt
  deleteAt  DateTime? 

}

model User{
  id        Int @id @default(autoincrement())
  email     String    @unique
  firstName String
  lastName  String
  password  String
  position  Position?
  role      Roles
  createAt  DateTime  @default(now())
  updateAt  DateTime   @updatedAt
  deleteAt  DateTime?
}

model Position {
  id        Int @id @default(autoincrement())
  name      String @unique
  createAt  DateTime  @default(now())
  updateAt  DateTime   @updatedAt
  deleteAt  DateTime?
  employees Employees[]
  user      User @relation(fields: [userId], references: [id])
  userId    Int @unique
}


model Employees {
  id        Int @id @default(autoincrement())
  email     String @unique
  firstName String
  lastName  String
  position  Position @relation(fields: [positionId], references: [id])
  positionId Int
  area Area @relation(fields: [areaId], references: [id])
  areaId Int
  licenses  Licenses[]
  createAt  DateTime  @default(now())
  updateAt  DateTime   @updatedAt
  deleteAt  DateTime?
}

model Area {
  id        Int @id @default(autoincrement())
  name      String @unique
  code      String?
  createAt  DateTime  @default(now())
  updateAt  DateTime   @updatedAt
  deleteAt  DateTime? 
  employees Employees[]
}

model Licenses {
  id  Int @id @default(autoincrement())
  authorId Int 
  author Employees @relation(fields: [authorId], references: [id])
  licenseTypes licenseTypes @relation(fields: [licenceTypeId], references: [id]) 
  licenceTypeId Int @unique
  startDate DateTime
  endDate DateTime
  startTime DateTime?
  endTime DateTime?
  createAt  DateTime  @default(now())
  updateAt  DateTime   @updatedAt
  deleteAt  DateTime? 
}

model licenseTypes{
  id Int @id @default(autoincrement())
  type String
  licence Licenses?
}
